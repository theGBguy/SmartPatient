<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <androidx.coordinatorlayout.widget.CoordinatorLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".ui.main.settings.SettingsFrag"
        tools:ignore="NewApi">

        <com.google.android.material.appbar.AppBarLayout
            android:id="@+id/settings_appbar"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:theme="@style/AppBarOverlay">

            <com.google.android.material.appbar.MaterialToolbar
                android:id="@+id/settings_toolbar"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:minHeight="?attr/actionBarSize" />

        </com.google.android.material.appbar.AppBarLayout>
        <!--this works as the container for the settings fragment
        put the code for the button layout above or below this framelayout
        according to your requirement-->
        <FrameLayout
            android:id="@android:id/list_container"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:layout_behavior="com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior" />

    </androidx.coordinatorlayout.widget.CoordinatorLayout>
</layout>